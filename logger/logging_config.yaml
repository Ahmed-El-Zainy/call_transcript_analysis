# Enhanced Universal Logger Configuration
# This configuration file supports any project type

# Base configuration
base_log_dir: logs
default_level: INFO
console_output: true
file_output: true
hierarchical_structure: true  # Creates year/month/day folder structure

# Log format options: SIMPLE, STANDARD, DETAILED, JSON, or custom format string
format: STANDARD

# File rotation configuration
rotation:
  enabled: true
  type: size  # 'size' or 'time'
  max_bytes: 10485760  # 10MB (for size-based rotation)
  backup_count: 5
  when: midnight  # for time-based rotation (midnight, H, D, W0-W6)
  interval: 1
  compress: true  # Compress rotated files

# Filtering configuration
filters:
  exclude_patterns: []  # Patterns to exclude from logging
  include_patterns: []  # Only log messages matching these patterns
  min_level_override: {}  # Override minimum level for specific loggers

# Context information to add to log records
context:
  add_hostname: true
  add_process_info: true
  add_thread_info: true
  custom_fields:
    environment: production
    version: "1.0.0"
    application: "my_app"

# Module-specific configurations
modules:
  # Web frameworks
  main:
    level: INFO
    format: STANDARD
    
  fastapi:
    level: DEBUG
    format: DETAILED
    
  django:
    level: INFO
    format: STANDARD
    
  flask:
    level: INFO
    format: STANDARD
    
  # Frontend frameworks
  gradio:
    level: DEBUG
    format: DETAILED
    
  streamlit:
    level: DEBUG
    format: DETAILED
    
  # Data processing
  pandas:
    level: WARNING
    format: STANDARD
    
  numpy:
    level: WARNING
    format: STANDARD
    
  # Machine Learning
  tensorflow:
    level: INFO
    format: STANDARD
    
  pytorch:
    level: INFO
    format: STANDARD
    
  sklearn:
    level: INFO
    format: STANDARD
    
  # Database
  database:
    level: INFO
    format: DETAILED
    
  sqlalchemy:
    level: WARNING
    format: STANDARD
    
  # API and networking
  requests:
    level: INFO
    format: STANDARD
    
  urllib3:
    level: WARNING
    format: STANDARD
    
  # Security and authentication
  auth:
    level: INFO
    format: DETAILED
    
  security:
    level: WARNING
    format: DETAILED
    
  # Business logic modules
  business_logic:
    level: INFO
    format: STANDARD
    
  data_processing:
    level: DEBUG
    format: DETAILED
    
  # Testing
  test:
    level: DEBUG
    format: DETAILED
    
  pytest:
    level: DEBUG
    format: DETAILED
    
  # Audit logging (special case)
  audit:
    level: INFO
    format: JSON
    
  # Performance monitoring
  performance:
    level: INFO
    format: JSON
    
  # Error tracking
  error_tracking:
    level: ERROR
    format: JSON
    
  # Background tasks
  celery:
    level: INFO
    format: STANDARD
    
  scheduler:
    level: INFO
    format: STANDARD
    
  # External services
  redis:
    level: WARNING
    format: STANDARD
    
  elasticsearch:
    level: WARNING
    format: STANDARD
    
  # Custom application modules (examples)
  user_management:
    level: INFO
    format: STANDARD
    
  order_processing:
    level: INFO
    format: DETAILED
    
  payment_gateway:
    level: INFO
    format: DETAILED
    
  notification_service:
    level: INFO
    format: STANDARD
    
  file_processor:
    level: DEBUG
    format: DETAILED
    
  image_processor:
    level: INFO
    format: STANDARD
    
  # Analytics and monitoring
  analytics:
    level: INFO
    format: JSON
    
  monitoring:
    level: INFO
    format: JSON
    
  metrics:
    level: INFO
    format: JSON